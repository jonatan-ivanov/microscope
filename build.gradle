buildscript {
    ext {
        springBootVersion = '1.4.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'com.bmuschko:gradle-docker-plugin:3.+'
    }
}
plugins {
    id 'com.gorylenko.gradle-git-properties' version '1.4.17'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.bmuschko.docker-java-application'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'microscope'
version = '0.0.1-SNAPSHOT'
mainClassName = 'microscope.Microscope'

springBoot  {
    buildInfo()
}

repositories {
    mavenCentral()
}
dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'de.codecentric:spring-boot-admin-server:1.+'
    compile 'de.codecentric:spring-boot-admin-server-ui:1.+'
    compile 'de.codecentric:spring-boot-admin-server-ui-hystrix:1.+'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

docker {
    javaApplication {
        baseImage = 'openjdk:8'
        tag = "$project.dockerNamespace/$project.applicationName:$project.version"
        maintainer = project.maintainer
        ports = [8090]
    }
    registryCredentials {
        username = dockerRegistryUserName
        password = dockerRegistryPassword
    }
}

task cleanAll {
    dependsOn clean, cleanIdea, cleanIdeaWorkspace
    doLast {
        delete 'out', 'logs'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}
